[{"/Users/dominic/workspace/dad_page/dad-page-frontend/src/index.js":"1","/Users/dominic/workspace/dad_page/dad-page-frontend/src/App.js":"2","/Users/dominic/workspace/dad_page/dad-page-frontend/src/reportWebVitals.js":"3","/Users/dominic/workspace/dad_page/dad-page-frontend/src/containers/LifeReview/LifeReview.js":"4","/Users/dominic/workspace/dad_page/dad-page-frontend/src/containers/Messages/Messages.js":"5","/Users/dominic/workspace/dad_page/dad-page-frontend/src/hoc/Aux.js":"6","/Users/dominic/workspace/dad_page/dad-page-frontend/src/components/Navigation/Toolbar/Toolbar.js":"7","/Users/dominic/workspace/dad_page/dad-page-frontend/src/components/UI/Header/Header.js":"8","/Users/dominic/workspace/dad_page/dad-page-frontend/src/hoc/Layouts/Layout.js":"9","/Users/dominic/workspace/dad_page/dad-page-frontend/src/containers/Articles/ArticleItems.js":"10","/Users/dominic/workspace/dad_page/dad-page-frontend/src/containers/Articles/Markdowns.js":"11","/Users/dominic/workspace/dad_page/dad-page-frontend/src/components/Article/Article.js":"12","/Users/dominic/workspace/dad_page/dad-page-frontend/src/components/ArticleItem/Title.js":"13","/Users/dominic/workspace/dad_page/dad-page-frontend/src/components/ArticleItem/Markdown.js":"14","/Users/dominic/workspace/dad_page/dad-page-frontend/src/components/Message/Message.js":"15","/Users/dominic/workspace/dad_page/dad-page-frontend/src/store/reducers/lifeReview.js":"16","/Users/dominic/workspace/dad_page/dad-page-frontend/src/utility/utility.js":"17","/Users/dominic/workspace/dad_page/dad-page-frontend/src/store/actions/actionTypes.js":"18","/Users/dominic/workspace/dad_page/dad-page-frontend/src/network/axios.js":"19","/Users/dominic/workspace/dad_page/dad-page-frontend/src/hoc/ErrorHandler/withErrorHandler.js":"20","/Users/dominic/workspace/dad_page/dad-page-frontend/src/store/actions/index.js":"21","/Users/dominic/workspace/dad_page/dad-page-frontend/src/store/actions/lifeReview.js":"22","/Users/dominic/workspace/dad_page/dad-page-frontend/src/components/UI/MessageBox/MessageBox.js":"23","/Users/dominic/workspace/dad_page/dad-page-frontend/src/components/UI/Input/Input.js":"24","/Users/dominic/workspace/dad_page/dad-page-frontend/src/store/actions/messages.js":"25","/Users/dominic/workspace/dad_page/dad-page-frontend/src/store/reducers/messages.js":"26","/Users/dominic/workspace/dad_page/dad-page-frontend/src/store/reducers/createMessage.js":"27","/Users/dominic/workspace/dad_page/dad-page-frontend/src/containers/CreateMessage/CreateMessage.js":"28","/Users/dominic/workspace/dad_page/dad-page-frontend/src/store/actions/createMessage.js":"29","/Users/dominic/workspace/dad_page/dad-page-frontend/src/components/UI/Spinner/Spinner.js":"30","/Users/dominic/workspace/dad_page/dad-page-frontend/src/components/UI/Example/Centering4Ways.js":"31","/Users/dominic/workspace/dad_page/dad-page-frontend/src/components/UI/Image/ImageCard.js":"32","/Users/dominic/workspace/dad_page/dad-page-frontend/src/components/UI/Image/ImageInput.js":"33","/Users/dominic/workspace/dad_page/dad-page-frontend/src/base.js":"34","/Users/dominic/workspace/dad_page/dad-page-frontend/src/utility/Image/ImageResizer.js":"35","/Users/dominic/workspace/dad_page/dad-page-frontend/src/components/Navigation/Header.js":"36","/Users/dominic/workspace/dad_page/dad-page-frontend/src/store/actions/auth.js":"37","/Users/dominic/workspace/dad_page/dad-page-frontend/src/store/reducers/auth.js":"38","/Users/dominic/workspace/dad_page/dad-page-frontend/src/components/UI/ContentContainer/ContentContainer.js":"39","/Users/dominic/workspace/dad_page/dad-page-frontend/src/components/UI/Cards/ErrorCard.js":"40","/Users/dominic/workspace/dad_page/dad-page-frontend/src/components/UI/Cards/MessageCard.js":"41","/Users/dominic/workspace/dad_page/dad-page-frontend/src/i18n.js":"42"},{"size":1876,"mtime":1612202663354,"results":"43","hashOfConfig":"44"},{"size":1242,"mtime":1612193642649,"results":"45","hashOfConfig":"44"},{"size":362,"mtime":1611619004206,"results":"46","hashOfConfig":"44"},{"size":3103,"mtime":1612220924874,"results":"47","hashOfConfig":"44"},{"size":2452,"mtime":1612207164847,"results":"48","hashOfConfig":"44"},{"size":59,"mtime":1611659217607,"results":"49","hashOfConfig":"50"},{"size":2014,"mtime":1611965569130,"results":"51","hashOfConfig":"44"},{"size":461,"mtime":1611702312398,"results":"52","hashOfConfig":"44"},{"size":1137,"mtime":1612198410181,"results":"53","hashOfConfig":"44"},{"size":2955,"mtime":1612207286357,"results":"54","hashOfConfig":"44"},{"size":1026,"mtime":1611703988989,"results":"55","hashOfConfig":"50"},{"size":557,"mtime":1611845887768,"results":"56","hashOfConfig":"44"},{"size":384,"mtime":1611702008555,"results":"57","hashOfConfig":"44"},{"size":1156,"mtime":1611700148756,"results":"58","hashOfConfig":"50"},{"size":2772,"mtime":1612226050925,"results":"59","hashOfConfig":"44"},{"size":1182,"mtime":1612180096416,"results":"60","hashOfConfig":"44"},{"size":1056,"mtime":1611768235125,"results":"61","hashOfConfig":"44"},{"size":863,"mtime":1612198009713,"results":"62","hashOfConfig":"44"},{"size":150,"mtime":1611685955063,"results":"63","hashOfConfig":"44"},{"size":1907,"mtime":1611793954820,"results":"64","hashOfConfig":"44"},{"size":266,"mtime":1612198042168,"results":"65","hashOfConfig":"44"},{"size":1751,"mtime":1612134716531,"results":"66","hashOfConfig":"44"},{"size":1623,"mtime":1611794107852,"results":"67","hashOfConfig":"44"},{"size":2033,"mtime":1612206078854,"results":"68","hashOfConfig":"44"},{"size":1687,"mtime":1612145182124,"results":"69","hashOfConfig":"44"},{"size":1092,"mtime":1612180101385,"results":"70","hashOfConfig":"44"},{"size":1518,"mtime":1612198100757,"results":"71","hashOfConfig":"44"},{"size":12717,"mtime":1612224175855,"results":"72","hashOfConfig":"44"},{"size":3933,"mtime":1612223628082,"results":"73","hashOfConfig":"44"},{"size":307,"mtime":1611797592071,"results":"74","hashOfConfig":"44"},{"size":1585,"mtime":1611797294917,"results":"75","hashOfConfig":"44"},{"size":672,"mtime":1612056203911,"results":"76","hashOfConfig":"44"},{"size":372,"mtime":1612194432754,"results":"77","hashOfConfig":"44"},{"size":1066,"mtime":1612276297932,"results":"78","hashOfConfig":"44"},{"size":1377,"mtime":1612149813157,"results":"79","hashOfConfig":"44"},{"size":3403,"mtime":1612274839566,"results":"80","hashOfConfig":"44"},{"size":3404,"mtime":1611971744391,"results":"81","hashOfConfig":"44"},{"size":1625,"mtime":1611969142464,"results":"82","hashOfConfig":"44"},{"size":647,"mtime":1612055935758,"results":"83","hashOfConfig":"44"},{"size":1099,"mtime":1612207196981,"results":"84","hashOfConfig":"44"},{"size":931,"mtime":1612206684755,"results":"85","hashOfConfig":"44"},{"size":1024,"mtime":1612203255018,"results":"86","hashOfConfig":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},"zdiml4",{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"89"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"89"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"1rysc9r",{"filePath":"103","messages":"104","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"89"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"89"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"89"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"138"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"89"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"89"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"89"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"89"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},"/Users/dominic/workspace/dad_page/dad-page-frontend/src/index.js",[],["189","190"],"/Users/dominic/workspace/dad_page/dad-page-frontend/src/App.js",["191"],"import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {app} from './base';\n\nimport MUILayout from './hoc/Layouts/Layout';\nimport LifeReview from './containers/LifeReview/LifeReview';\nimport Messages from './containers/Messages/Messages';\nimport CreateMessage from './containers/CreateMessage/CreateMessage';\nimport * as actions from './store/actions/index';\n\n\nclass App extends Component {\n\n  componentDidMount() {\n    console.log('App componentDidMount');\n    this.props.onInitAuth();\n  }\n\n  render() {\n    let routes = (\n      <Switch>\n        <Route path=\"/messages\" component={Messages} />\n        <Route path=\"/newmessage\" component={CreateMessage} />\n        <Route path=\"/\" component={LifeReview} />\n      </Switch>\n    );\n\n    return (\n        <MUILayout>\n          {routes}\n        </MUILayout>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    authenticated: state.auth.authenticated\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onInitAuth: () => dispatch(actions.initAuth()),\n    onRefreshLoginState: () => dispatch(actions.refreshLoginState)\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","/Users/dominic/workspace/dad_page/dad-page-frontend/src/reportWebVitals.js",[],"/Users/dominic/workspace/dad_page/dad-page-frontend/src/containers/LifeReview/LifeReview.js",["192","193","194"],"import React, { Component } from 'react';\nimport { Grid, Typography } from '@material-ui/core';\nimport titleImage from '../../assets/venice.jpg'\nimport profileImage from '../../assets/profile.jpeg'\nimport { withStyles } from '@material-ui/core/styles';\n\nimport ArticleItems from '../Articles/ArticleItems';\nimport ContentContainer from '../../components/UI/ContentContainer/ContentContainer';\nimport { withTranslation } from 'react-i18next';\n\nconst styles = theme => ({\n    root: {\n        paddingBottom: 100\n    },\n    titleImageDiv: {\n        overflow: 'hidden'\n    },\n    titleImage: {\n\n        objectFit: 'cover',\n        // height: '400px',\n        width: '1080px',\n        marginTop: '20px',\n        marginLeft: '50%',\n        transform: 'translateX(-50%)',\n        opacity: '0.8'\n    },\n    profileImage: {\n        objectFit: 'contain',\n        top: '180px',\n        // marginTop: '20px',\n        position: 'absolute',\n\n        height: '300px',\n        marginLeft: '65%',\n        transform: 'translateX(-65%)',\n\n\n        [theme.breakpoints.down('sm')]: {\n            height: '250px',\n            marginLeft: '50%',\n            transform: 'translateX(-50%)',\n        }\n    },\n    title: {\n        top: '450px',\n        // marginTop: '100px',\n        marginLeft: '5%',\n        transform: 'translateX(-5%)',\n        position: 'absolute',\n        width: '600px',\n        color: 'white',\n        fontWeight: 'bold',\n        textShadow: '1px 1px black',\n\n        [theme.breakpoints.down('sm')]: {\n            top: '400px',\n            marginLeft: '50%',\n            width: '250px',\n            transform: 'translateX(-50%)'\n        }\n    }\n});\n\nclass LifeReview extends Component {\n    \n    render() {\n        const {t} = this.props;\n\n        return (\n            <React.Fragment>\n                <ContentContainer>\n                    <div className={this.props.classes.titleImageDiv}>\n                        <img\n                            className={this.props.classes.titleImage}\n                            // src={titleImage}\n                            src=\"https://firebasestorage.googleapis.com/v0/b/dad-page.appspot.com/o/lifereview%2Fcover.jpg?alt=media&token=69c14fb4-3ac8-427f-aaf2-178d57456351\"\n                            alt='image'\n                        />\n                    </div>\n                    {/* <img\n                        className={this.props.classes.profileImage}\n                        src={profileImage}\n                        alt='image'\n                    /> */}\n                    <Typography variant=\"h6\" align=\"center\"\n                        className={this.props.classes.title}\n                    >\n                        {t('lifereview.heading')}\n                    </Typography>\n                    <Grid container justify=\"center\" className={this.props.classes.root}\n                    // spacing={2} \n                    >\n                        <ArticleItems />\n                    </Grid>\n                </ContentContainer>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withTranslation()(withStyles(styles)(LifeReview));","/Users/dominic/workspace/dad_page/dad-page-frontend/src/containers/Messages/Messages.js",[],"/Users/dominic/workspace/dad_page/dad-page-frontend/src/hoc/Aux.js",[],["195","196"],"/Users/dominic/workspace/dad_page/dad-page-frontend/src/components/Navigation/Toolbar/Toolbar.js",["197","198","199","200","201","202"],"import React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport {Tab, Tabs} from '@material-ui/core';\nimport {Toolbar as MUIToolbar} from '@material-ui/core';\nimport { Link} from 'react-router-dom';\n\nimport Typography from '@material-ui/core/Typography';\n\nconst StyledTabs = withStyles({\n  indicator: {\n    display: 'flex',\n    justifyContent: 'center',\n    backgroundColor: 'transparent',\n    '& > span': {\n      maxWidth: 40,\n      width: '100%',\n      backgroundColor: 'black',\n    },\n  }\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\n\nconst StyledTab = withStyles((theme) => ({\n  root: {\n    textTransform: 'none',\n    // color: '#fff',\n    fontWeight: theme.typography.fontWeightRegular,\n    fontSize: theme.typography.pxToRem(15),\n    marginRight: theme.spacing(1),\n    '&:focus': {\n      opacity: 1,\n    },\n  },\n}))((props) => <Tab disableRipple {...props} />);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n    padding: {\n      padding: theme.spacing(1),\n    },\n  //   demo1: {\n  //     backgroundColor: theme.palette.background.paper,\n  //   },\n  //   demo2: {\n  //     backgroundColor: '#2e1534',\n  //   },\n}));\n\nexport function Toolbar() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    // <div className={classes.demo2}>\n    //   <StyledTabs value={value} onChange={handleChange}>\n    //     <StyledTab label=\"Life\" component={Link} to=\"/\"/>\n    //     <StyledTab label=\"Messages\" component={Link} to=\"/messages\"/>\n    //     <StyledTab label=\"New Message\" component={Link} to=\"/newmessage\"/>\n    //   </StyledTabs>\n    //   <Typography className={classes.padding} />\n    // </div>\n\n    <MUIToolbar component=\"nav\" variant=\"dense\">\n      <Link to=\"/\">Life</Link>\n      <Link to=\"/messages\">Messages</Link>\n      <Link to=\"/newmessage\">New Message</Link>\n    </MUIToolbar>\n  );\n}\n",["203","204"],"/Users/dominic/workspace/dad_page/dad-page-frontend/src/components/UI/Header/Header.js",[],["205","206"],"/Users/dominic/workspace/dad_page/dad-page-frontend/src/hoc/Layouts/Layout.js",["207","208"],"import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { Container, MuiThemeProvider, createMuiTheme } from '@material-ui/core';\nimport {indigo} from '@material-ui/core/colors';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Header from '../../components/Navigation/Header';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: indigo,\n        // secondary: amber,\n    },\n    \n});\n\nconst useStyles = makeStyles(theme => {\n    return ({\n    root: {\n        marginTop: 100,\n        minHeight: 'calc(100vh - 100px)',\n        width: '80%',        \n        [theme.breakpoints.down('sm')]:{\n            width: '100%'\n        },\n        background: '#F5F3EE'\n    }\n})});\n\n\nconst MuiLayout = (props) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            {/* to ensure similar look and feel across different browsers */}\n            <CssBaseline />\n\n            <MuiThemeProvider theme={theme}>\n                <Header />\n                {props.children}\n            </MuiThemeProvider>\n        </React.Fragment>\n    );\n}\n\nexport default MuiLayout;","/Users/dominic/workspace/dad_page/dad-page-frontend/src/containers/Articles/ArticleItems.js",["209"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Grid } from '@material-ui/core';\nimport { withTranslation } from 'react-i18next';\n\nimport Article from '../../components/Article/Article';\nimport * as actions from '../../store/actions/index';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport ErrorCard from '../../components/UI/Cards/ErrorCard';\nimport ImageCard from '../../components/UI/Image/ImageCard';\n\nclass ArticleItems extends Component {\n    componentDidMount() {\n        if(!this.props.articleItems){\n            this.props.onGetLifeReview();\n        }\n    }\n\n    refreshPage = () => {\n        this.props.onGetLifeReview();\n    }\n\n    render() {\n        let articleItems = null;\n        const{t} = this.props;\n\n        if (this.props.loading) {\n            articleItems = <Grid item><Spinner /> </Grid>\n        } else if (this.props.error) {\n            articleItems = (\n                <Grid item>\n                    <ErrorCard onAction={this.refreshPage} actionText={t('general.refresh')} />\n                </Grid>\n            );\n        } else if (this.props.articleItems) {\n            articleItems = this.props.articleItems.map(\n                article => {\n                    if (article.type === 'article') {\n                        return (<Grid item key={article.id}\n                            xs={12} // sm={10} md={8}\n                        >\n                            <Article  {...article} />\n                        </Grid>\n                        );\n                    } else if (article.type === 'image') {\n                        return (\n                            <Grid item key={article.id} xs={12} sm={10} md={8}>\n                                <ImageCard\n                                    imageURL={article.imageURL}\n                                    caption={article.caption}\n                                />\n                            </Grid>\n                        );\n                    }\n                }\n            );\n\n            // articleItems.push((\n            //     <Grid item key=\"skdjfhsdkjf\"\n            //         xs={12}\n            //     // sm={10} md={8}\n            //     >\n            //         <ImageCard\n            //             imageURL=\"https://firebasestorage.googleapis.com/v0/b/dad-page.appspot.com/o/25.jpg?alt=media\"\n            //             caption=\"犯人其在名字旁\" />\n            //     </Grid>\n            // ));\n        }\n\n        return (\n            articleItems\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        articleItems: state.lifeReview.articleItems,\n        loading: state.lifeReview.loading,\n        error: state.lifeReview.error\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onGetLifeReview: () => dispatch(actions.getLifeReview())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withTranslation()(ArticleItems));","/Users/dominic/workspace/dad_page/dad-page-frontend/src/containers/Articles/Markdowns.js",[],"/Users/dominic/workspace/dad_page/dad-page-frontend/src/components/Article/Article.js",[],"/Users/dominic/workspace/dad_page/dad-page-frontend/src/components/ArticleItem/Title.js",[],"/Users/dominic/workspace/dad_page/dad-page-frontend/src/components/ArticleItem/Markdown.js",[],"/Users/dominic/workspace/dad_page/dad-page-frontend/src/components/Message/Message.js",["210","211","212","213","214"],"import React from 'react';\nimport Title from '../ArticleItem/Title';\nimport { Typography, Card, CardContent, Grid, Paper, GridList, GridListTile } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { blue } from '@material-ui/core/colors';\n\nimport ImageCard from '../UI/Image/ImageCard';\n\nconst useStyles = makeStyles({\n    root: {\n        marginBottom: '50px',\n        width: '100%',\n        background: '#F5E9D4'\n    },\n    content: {\n        margin: '12px'\n    },\n    gridListRoot: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        // backgroundColor: theme.palette.background.paper,\n      },\n    // gridList: {\n    //     width: 500,\n    //     height: 450,\n    //   },\n});\n\nconst Message = (props) => {\n    let title = null;\n    const classes = useStyles();\n\n    if (props.title) {\n        title = (\n            <Title title={props.title} />\n        );\n    }\n\n    let imageCards = [];\n    if (props.imageFiles) {\n        imageCards = (\n            <Grid container justify=\"center\">\n                {props.imageFiles.map((files, index) => (\n                    <Grid item key={index} xs={12} sm={10} md={8}>\n                        <ImageCard\n                            imageURL={files.resizedImageURL}\n                        />\n                    </Grid>\n                ))}\n            </Grid>\n\n            // <div className={classes.gridListRoot}>\n            //     <GridList className={classes.gridList} cols={2}>\n            //         {props.imageFiles.map((files, index) => (\n            //             <GridListTile key={index}>\n            //                 <img src={files.resizedImageURL} />\n            //             </GridListTile>\n            //         ))}\n            //     </GridList>\n            // </div>\n        );\n    }\n\n    return (\n        <Card className={classes.root} variant=\"outlined\">\n            <CardContent>\n                <Typography className={classes.content} \n                    variant=\"body1\" \n                    style={{ whiteSpace: 'pre-line' }}\n                    gutterBottom paragraph>\n                    {props.content}\n                </Typography>                \n                {imageCards}\n                <Typography\n                    className={classes.content}\n                    component=\"h2\"\n                    variant=\"h5\"\n                    color=\"inherit\"\n                    align=\"right\"\n                    style={{ whiteSpace: 'pre-line' }}\n                    // noWrap\n                    gutterBottom paragraph\n                >\n                    {props.author}\n                </Typography>\n            </CardContent>\n        </Card>\n    );\n}\n\nexport default Message;","/Users/dominic/workspace/dad_page/dad-page-frontend/src/store/reducers/lifeReview.js",[],"/Users/dominic/workspace/dad_page/dad-page-frontend/src/utility/utility.js",[],"/Users/dominic/workspace/dad_page/dad-page-frontend/src/store/actions/actionTypes.js",[],"/Users/dominic/workspace/dad_page/dad-page-frontend/src/network/axios.js",[],"/Users/dominic/workspace/dad_page/dad-page-frontend/src/hoc/ErrorHandler/withErrorHandler.js",["215"],"import React, {Component} from 'react';\nimport Modal from '@material-ui/core/Modal';\n\nimport MessageBox from '../../components/UI/MessageBox/MessageBox';\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n    //anonymous class\n    return class extends Component{\n        constructor (props) {\n            super(props);\n\n            this.state = {\n                error: null\n            };\n\n            // clear error whenever request is sent\n            this.reqInterceptor = axios.interceptors.request.use(req => {\n                this.setState({error: null});\n                return req;\n            });\n\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\n                this.setState({error: error});\n                return Promise.reject(error);\n            });\n        }\n\n        componentWillUnmount() {\n            // to ensure that axios interceptors are removed when component is unmount to prevent memory leak\n            console.log(this.reqInterceptor, this.resInterceptor);\n            axios.interceptors.request.eject(this.reqInterceptor);\n            axios.interceptors.response.eject(this.resInterceptor);\n        }\n\n        clearErrorHandler = () => {\n            this.setState({error: null});\n        }\n\n        render() {\n            return (\n                <React.Fragment>\n                    <MessageBox\n                        title=\"Error\"\n                        message={this.state.error\n                            ?this.state.error.message\n                            : 'Unexpected error'}\n                        actionType=\"OK\"\n                        open={this.state.error}\n                        onClose={this.clearErrorHandler}\n                    />\n                    <WrappedComponent {...this.props} />\n                </React.Fragment>\n                \n            );\n        }\n    }\n}\n\nexport default withErrorHandler;",["216","217"],"/Users/dominic/workspace/dad_page/dad-page-frontend/src/store/actions/index.js",[],"/Users/dominic/workspace/dad_page/dad-page-frontend/src/store/actions/lifeReview.js",[],"/Users/dominic/workspace/dad_page/dad-page-frontend/src/components/UI/MessageBox/MessageBox.js",["218"],"import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nexport default function MessageBox(props) {\n\n    let title = null;\n    let message = null;\n    let buttons = null;\n    let dialogue = null;\n\n    if (props.title) {\n        title = <DialogTitle id=\"form-dialog-title\">{props.title}</DialogTitle>;\n    }\n\n    if (props.message) {\n        message = (\n            <DialogContentText>\n                {props.message}\n            </DialogContentText>\n        );\n    }\n\n    if (props.actionType === 'OK') {\n        buttons = (\n            <Button onClick={props.onClose} color=\"primary\">\n                OK\n            </Button>\n        );\n    }\n\n    if(props.open){\n        dialogue = (\n            <Dialog open onClose={props.onClose} aria-labelledby=\"form-dialog-title\">\n                {title}\n\n                <DialogContent style={{minWidth: 400}}>\n                    {message}\n                    {props.children}\n                </DialogContent>\n                {buttons\n                    ? (<DialogActions>\n                        {buttons}\n                    </DialogActions>)\n                    : null}\n            </Dialog>\n        );\n    }\n\n    return (\n        <React.Fragment>\n            {dialogue}\n        </React.Fragment>\n    );\n}\n","/Users/dominic/workspace/dad_page/dad-page-frontend/src/components/UI/Input/Input.js",[],"/Users/dominic/workspace/dad_page/dad-page-frontend/src/store/actions/messages.js",[],"/Users/dominic/workspace/dad_page/dad-page-frontend/src/store/reducers/messages.js",[],"/Users/dominic/workspace/dad_page/dad-page-frontend/src/store/reducers/createMessage.js",[],"/Users/dominic/workspace/dad_page/dad-page-frontend/src/containers/CreateMessage/CreateMessage.js",["219","220"],"import React, { Component } from 'react';\nimport { Button, Grid, Typography } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { app } from '../../base';\nimport { withTranslation } from 'react-i18next';\n\nimport Input from '../../components/UI/Input/Input'\nimport { checkFormFieldValid, updateArray } from '../../utility/utility';\nimport * as actions from '../../store/actions/index';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport ImageInput from '../../components/UI/Image/ImageInput';\nimport ImageCard from '../../components/UI/Image/ImageCard';\nimport { resizeImage } from '../../utility/Image/ImageResizer';\nimport ContentContainer from '../../components/UI/ContentContainer/ContentContainer';\nimport MessageCard from '../../components/UI/Cards/MessageCard';\nimport GoogleButton from 'react-google-button'\n\nconst styles = theme => ({\n    root: {\n        paddingBottom: 100\n    },\n    login: {\n        paddingTop: 50\n    },\n    form: {\n        '& .MuiTextField-root': {\n            // boxSizing: 'border-box',\n            margin: '20px 0px',\n            width: '100%',\n            display: 'block'\n        },\n        width: '100%'\n    }\n});\n\nconst storage = app.storage();\n\nclass CreateMessage extends Component {\n    state = {\n        controls: [\n            {\n                id: 'author',\n                elementType: 'textarea',\n                elementConfig: {\n                    label: this.props.t('createmessage.name'),\n                    rows: 2\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                modified: false\n            },\n            {\n                id: 'content',\n                elementType: 'textarea',\n                elementConfig: {\n                    label: this.props.t('createmessage.message'),\n                    rows: 15\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                modified: false\n            }\n        ],\n        isFormValid: false,\n        imageFiles: [] // {original: file, resized: base64}\n    }\n\n    checkFormValid(form) {\n        return form.map((field) => {\n            if (!field.validation)\n                return true;\n            else\n                return field.valid;\n        }).reduce((accum, field) => {\n            return accum && field;\n        }, true);\n    }\n\n    submitHandler = (event) => {\n        // event.preventDefault();\n\n        const message = {};\n\n        if (this.checkFormValid(this.state.controls)) {\n            this.state.controls.forEach(control => {\n                message[control.id] = control.value;\n            });\n\n            this.props.onCreateMessage(\n                this.props.userId,\n                message,\n                this.state.imageFiles);\n        }\n    }\n\n    inputChangedHandler = (event, configIndex) => {\n        const updatedControls = updateArray(this.state.controls,\n            {\n                ...this.state.controls[configIndex],\n                value: event.target.value,\n                valid: checkFormFieldValid(event.target.value, this.state.controls[configIndex].validation),\n                modified: true\n            },\n            configIndex\n        );\n        //console.log(updatedControls);\n        this.setState({\n            controls: updatedControls,\n            isFormValid: this.checkFormValid(updatedControls)\n        });\n    }\n\n    resetForm = () => {\n        const newControls = this.state.controls.map(control => {\n            return {\n                ...control, ...{\n                    value: '',\n                    valid: false,\n                    modified: false\n                }\n            };\n        });\n\n        this.setState({\n            controls: newControls,\n            isFormValid: false,\n            imageFiles: []\n        });\n\n        this.props.onCreateMessageReset();\n    }\n\n    imageChosenHandler = async (event) => {\n        const imageFilesList = event.target.files;\n        const inputValue = event.target.value;\n\n        if (imageFilesList) {\n            const imageFiles = [];\n\n            for (let i = 0; i < imageFilesList.length; i++) {\n                let file = imageFilesList[i];\n\n                if (i < 3 && (file.type === 'image/jpeg' \n                || file.type === 'image/x-png'\n                || file.type === 'image/png')) {\n                    imageFiles.push({ original: file });\n                }\n            }\n\n            // imageFiles.forEach(async(file, index) => {\n            for (let index = 0; index < imageFiles.length; index++) {\n                let file = imageFiles[index];\n                let contentType = null;\n\n                // if (file.original.type === 'image/jpeg') {\n                //     contentType = 'JPEG';\n                // } else if (file.original.type === 'image/x-png'\n                // || file.original.type === 'image/png') {\n                //     contentType = 'PNG';\n                // }\n                contentType = 'JPEG';\n\n                try{\n                    imageFiles[index]['resized'] = await resizeImage(file.original, contentType);\n                }catch(error){\n                    console.log(error);\n                }\n            };\n\n            this.setState({\n                imageFiles: imageFiles\n            });\n\n        } else {\n            this.setState({\n                imageFiles: []\n            });\n        }\n    }\n\n    render() {\n        const additionalConfig = { fullWidth: true };\n        const buttonConfig = {};\n        let mainContent = null;\n        const { t, classes } = this.props;\n\n        if (this.props.createMessageSuccess) {\n            mainContent = <Grid item xs={12} >\n                <MessageCard\n                    message={t('createmessage.submit_success')}\n                    actionText={t('general.ok')}\n                    onAction={this.resetForm} />\n            </Grid>;\n        }\n        else {\n            if (this.props.authenticated) {\n\n\n                // let resizedImageCard = null;\n                // if (this.state.resizedImageBase64) {\n                //     resizedImageCard = (\n                //         <React.Fragment>\n                //             <ImageCard\n                //                 imageURL={this.state.resizedImageBase64}\n                //             />\n                //         </React.Fragment>\n                //     );\n                // }\n\n                if (this.props.loading) {\n                    mainContent = <Grid item xs={12}><Spinner /></Grid>;\n                } else {\n                    let createMessageError = null;\n\n                    if (!this.state.isFormValid) {\n                        buttonConfig['disabled'] = true;\n                    }\n\n                    let imageCards = null;\n                    if (this.state.imageFiles.length > 0) {\n                        let images = this.state.imageFiles.map((files, index) => {\n                            let imageFilePath = URL.createObjectURL(files.original);\n                            if (files.resized) {\n                                imageFilePath = files.resized;\n                            }\n\n                            return (\n                                <Grid item xs={12} sm={10} md={8} key={index}>\n                                    <ImageCard\n                                        imageURL={imageFilePath}\n                                    />\n                                </Grid>\n                            );\n                        });\n\n                        imageCards = (\n                            <Grid container justify=\"center\" style={{ margin: '20px 0px' }}>\n                                {images}\n                            </Grid>\n                        );\n                    }\n\n                    if (this.props.createMessageError) {\n                        createMessageError = (\n                            <Grid item xs={12}>\n                                <Typography\n                                    variant=\"body1\"\n                                    color=\"error\"\n                                >{this.props.createMessageError.message}</Typography>\n                            </Grid>\n                        );\n                    }\n\n                    mainContent = (\n                        <React.Fragment>\n                            <Grid item xs={12}>\n                                <form className={classes.form} >\n                                    {this.state.controls.map((formElement, index) => {\n                                        return (\n                                            <Input\n                                                key={index}\n                                                elementType={formElement.elementType}\n                                                validation={formElement.validation}\n                                                elementConfig={{ ...formElement.elementConfig, ...additionalConfig }}\n                                                value={formElement.value}\n                                                onChange={(event) => { this.inputChangedHandler(event, index) }}\n                                                needValidation={formElement.validation && formElement.modified}\n                                                required={formElement.validation && formElement.validation.required}\n                                                invalid={!formElement.valid}\n                                            />\n                                        )\n                                    }\n                                    )}\n\n                                    {/* {resizedImageCard} */}\n                                </form>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Typography variant=\"body1\">\n                                    {t('createmessage.upload_image')}\n                                </Typography>\n                                <ImageInput\n                                    onChange={(e) => this.imageChosenHandler(e)} />\n                                {imageCards}\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    {...buttonConfig}\n                                    onClick={this.submitHandler}\n                                >\n                                    {t('createmessage.submit')}\n                                </Button>\n                            </Grid>\n                            {createMessageError}\n                        </React.Fragment>\n                    );\n                };\n            } else {\n                mainContent = (\n                    <React.Fragment>\n                        <Grid item xs={12}>\n                            <Typography variant=\"body1\" className={classes.login}>\n                                {t('createmessage.must_signin')}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <GoogleButton label={t('createmessage.google_login')} onClick={this.props.onGoogleLogin} />\n                        </Grid>\n                    </React.Fragment>\n                );\n\n            }\n        }\n\n        return (\n            <ContentContainer>\n                <Grid container justify=\"center\" spacing={2} className={classes.root}>\n                    {mainContent}\n                </Grid>\n            </ContentContainer>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        loading: state.createMessage.loading,\n        createMessageError: state.createMessage.createMessageError,\n        createMessageSuccess: state.createMessage.createMessageSuccess,\n\n        loginLoading: state.auth.loading,\n        authenticated: state.auth.authenticated,\n        userId: state.auth.userId\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onCreateMessage: (userId, message, imageFiles) => dispatch(actions.createMessage(userId, message, imageFiles)),\n        onCreateMessageReset: () => dispatch(actions.createMessageReset()),\n        onGoogleLogin: () => dispatch(actions.googleLogin())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)\n    (withTranslation()(\n        withStyles(styles)(CreateMessage)\n    ));\n","/Users/dominic/workspace/dad_page/dad-page-frontend/src/store/actions/createMessage.js",["221"],"import * as actionTypes from './actionTypes';\nimport axios from '../../network/axios';\nimport firebase from 'firebase';\nimport { app } from \"../../base\";\n\nexport const createMessageSuccess = () => {\n    return {\n        type: actionTypes.CREATE_MESSAGE_SUCCESS\n    };\n};\n\nexport const createMessageFailed = (error) => {\n    return {\n        type: actionTypes.CREATE_MESSAGE_FAILED,\n        error: error\n    };\n};\n\nexport const createMessageStart = () => {\n    return {\n        type: actionTypes.CREATE_MESSAGE_START\n    };\n}\n\nexport const createMessageReset = () => {\n    return {\n        type: actionTypes.CREATE_MESSAGE_RESET\n    };\n}\n\nconst uploadImage = async (filename, file, contentType, isBase64) => {\n    const storageRef = app.storage().ref();\n\n    let fileRef = storageRef.child(filename);\n    let downloadURL = null;\n\n\n    if (isBase64) {\n        await fileRef.putString(file, 'base64', { contentType: contentType })\n    } else {\n        await fileRef.put(file);\n    }\n    downloadURL = await fileRef.getDownloadURL();\n\n    return downloadURL;\n}\n\nexport const createMessage = (userId, message, imageFiles) => {\n    return async dispatch => {\n        dispatch(createMessageStart());\n\n        const fileNamePrefix = userId + '-' + new Date().getTime();\n        const messageImages = [];\n\n        for (let i = 0; i < imageFiles.length; i++) {\n            let originalImage = imageFiles[i].original;\n            let resizedImageBase64 = imageFiles[i].resized;\n\n            if (originalImage) {\n                let originalImageURL = null;\n                let image = {};\n\n                try {\n                    originalImageURL = await uploadImage(\n                        'messages/original/' + fileNamePrefix + '-' + i + '-ori',\n                        originalImage,\n                        originalImage.type,\n                        false);\n\n                    image['originalImageURL'] = originalImageURL;\n                } catch (error) {\n                    console.log(\"createMessage: uploadImage original[\"+i+\"] error \", error);\n                    dispatch(createMessageFailed(new Error('Upload original image '+i+' failed')));\n                    return;\n                }\n\n                if (resizedImageBase64) {\n                    let resizedImageURL = null;\n                    resizedImageBase64 = resizedImageBase64.substring(resizedImageBase64.indexOf(',') + 1);\n\n                    try {\n                        resizedImageURL = await uploadImage(\n                            'messages/resized/' + fileNamePrefix + '-' + i + '-r1',\n                            resizedImageBase64,\n                            // originalImage.type,\n                            'image/jpeg',\n                            true);\n\n                        image['resizedImageURL'] = resizedImageURL;\n                    } catch (error) {\n                        console.log(\"createMessage: uploadImage original[\"+i+\"] error \", error);\n                        dispatch(createMessageFailed(new Error('Upload resized image '+i+' failed')));\n                        return;\n                    }\n                }\n                messageImages.push(image);\n            }\n        }\n\n        message['imageFiles'] = messageImages;\n\n        // add order and timestamp as server timestamp\n        message['timestamp'] = firebase.firestore.FieldValue.serverTimestamp();\n        message['order'] = firebase.firestore.FieldValue.serverTimestamp();\n        message['userId'] = userId;\n\n        app.firestore().collection(\"messages\").add(message)\n            .then(response => {\n                console.log(\"createMessage: success\", response);\n                dispatch(createMessageSuccess());\n            })\n            .catch(function (error) {\n                console.log(\"createMessage: upload firestore failed\", error);\n                dispatch(createMessageFailed(new Error('Failed to create message')));\n            });\n    }\n}","/Users/dominic/workspace/dad_page/dad-page-frontend/src/components/UI/Spinner/Spinner.js",[],"/Users/dominic/workspace/dad_page/dad-page-frontend/src/components/UI/Example/Centering4Ways.js",[],["222","223"],"/Users/dominic/workspace/dad_page/dad-page-frontend/src/components/UI/Image/ImageCard.js",["224","225","226","227","228","229","230"],"import React from 'react';\nimport { Typography, Card, CardMedia, CardContent, Container, Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst ImageCard = (props) => {\n\n    const style = {\n      height: 'auto',\n      width: '100%',\n      objectFit: 'contain'\n    }\n\n    let caption = null;\n\n    if(props.caption){\n      caption = <Typography variant=\"body1\">{props.caption}</Typography>\n    }\n\n    return (\n             <div>\n             <img \n                style={style}\n                src={props.imageURL}\n                alt='image'\n            />\n            {caption}\n            </div>\n    );\n}\n\nexport default ImageCard;","/Users/dominic/workspace/dad_page/dad-page-frontend/src/components/UI/Image/ImageInput.js",[],"/Users/dominic/workspace/dad_page/dad-page-frontend/src/base.js",[],"/Users/dominic/workspace/dad_page/dad-page-frontend/src/utility/Image/ImageResizer.js",[],"/Users/dominic/workspace/dad_page/dad-page-frontend/src/components/Navigation/Header.js",["231"],"/Users/dominic/workspace/dad_page/dad-page-frontend/src/store/actions/auth.js",["232","233","234","235","236"],"import firebase from 'firebase';\nimport * as actionTypes from './actionTypes';\nimport { app } from \"../../base\";\n\nexport const loginSuccess = (authProvider, userId) => {\n    return {\n        type: actionTypes.LOGIN_SUCCESS,\n        authProvider: authProvider,\n        userId: userId\n    };\n};\n\nexport const loginFailed = (error) => {\n    return {\n        type: actionTypes.LOGIN_FAILED,\n        error: error\n    };\n};\n\nexport const loginStart = () => {\n    return {\n        type: actionTypes.LOGIN_START\n    };\n}\n\nconst getGoogleProvider = () => {\n\n    const provider = new firebase.auth.GoogleAuthProvider();\n    provider.addScope('https://www.googleapis.com/auth/userinfo.email');\n    // provider.setCustomParameters({\n    //     'login_hint': 'user@example.com'\n    // });\n\n    return provider;\n}\n\nexport const googleLogin = () => {\n    return dispatch => {\n        dispatch(loginStart());\n\n        firebase.auth()\n            .signInWithPopup(getGoogleProvider())\n            .then((result) => {\n                /** @type {firebase.auth.OAuthCredential} */\n                const credential = result.credential;\n\n                console.log(result);\n                dispatch(loginSuccess('google.com', result.user.uid));\n            }).catch((error) => {\n                console.log(error);\n                // Handle Errors here.\n                var errorCode = error.code;\n                var errorMessage = error.message;\n                // The email of the user's account used.\n                var email = error.email;\n                // The firebase.auth.AuthCredential type that was used.\n                var credential = error.credential;\n                dispatch(loginFailed(error));\n            });\n    }\n}\n\nexport const logoutSuccess = () => {\n    return {\n        type: actionTypes.LOGOUT_SUCCESS\n    };\n};\n\nexport const logoutFailed = (error) => {\n    return {\n        type: actionTypes.LOGOUT_FAILED,\n        error: error\n    };\n};\n\nexport const logoutStart = () => {\n    return {\n        type: actionTypes.LOGOUT_START\n    };\n}\n\nexport const logout = () => {\n    return dispatch => {\n        dispatch(logoutStart());\n\n        firebase.auth().signOut()\n            .then((result) => {\n                dispatch(logoutSuccess());\n            }).catch((error) => {\n                dispatch(logoutFailed(error));\n            });\n    }\n}\n\nexport const initAuth = () => {\n    return dispatch => {\n        // set firebase user token persistent to local storage\n        app.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL)\n            .then(() => {\n                console.log('set firebase persistence success');\n            })\n            .catch((error) => {\n                console.log('set firebase persistence failed', error);\n            })\n            .finally(() => {\n                app.auth().onAuthStateChanged(function(user) {\n                    console.log('onAuthStateChanged', user);\n                    dispatch(refreshLoginState());\n                  });\n            });\n    }\n}\n\nexport const refreshLoginState = () => {\n    return dispatch => {\n        const user = app.auth().currentUser;\n\n        if (user === null) {\n            dispatch(logout());\n            console.log('refreshLoginState user = null');\n        } else {\n            console.log('refreshLoginState user = '+user.uid);\n            dispatch(loginSuccess('google.com', user.uid));\n        }\n    }\n}","/Users/dominic/workspace/dad_page/dad-page-frontend/src/store/reducers/auth.js",[],"/Users/dominic/workspace/dad_page/dad-page-frontend/src/components/UI/ContentContainer/ContentContainer.js",[],"/Users/dominic/workspace/dad_page/dad-page-frontend/src/components/UI/Cards/ErrorCard.js",[],"/Users/dominic/workspace/dad_page/dad-page-frontend/src/components/UI/Cards/MessageCard.js",[],"/Users/dominic/workspace/dad_page/dad-page-frontend/src/i18n.js",[],{"ruleId":"237","replacedBy":"238"},{"ruleId":"239","replacedBy":"240"},{"ruleId":"241","severity":1,"message":"242","line":4,"column":9,"nodeType":"243","messageId":"244","endLine":4,"endColumn":12},{"ruleId":"241","severity":1,"message":"245","line":3,"column":8,"nodeType":"243","messageId":"244","endLine":3,"endColumn":18},{"ruleId":"241","severity":1,"message":"246","line":4,"column":8,"nodeType":"243","messageId":"244","endLine":4,"endColumn":20},{"ruleId":"247","severity":1,"message":"248","line":74,"column":25,"nodeType":"249","endLine":79,"endColumn":27},{"ruleId":"237","replacedBy":"250"},{"ruleId":"239","replacedBy":"251"},{"ruleId":"241","severity":1,"message":"252","line":7,"column":8,"nodeType":"243","messageId":"244","endLine":7,"endColumn":18},{"ruleId":"241","severity":1,"message":"253","line":9,"column":7,"nodeType":"243","messageId":"244","endLine":9,"endColumn":17},{"ruleId":"241","severity":1,"message":"254","line":22,"column":7,"nodeType":"243","messageId":"244","endLine":22,"endColumn":16},{"ruleId":"241","severity":1,"message":"255","line":51,"column":9,"nodeType":"243","messageId":"244","endLine":51,"endColumn":16},{"ruleId":"241","severity":1,"message":"256","line":52,"column":10,"nodeType":"243","messageId":"244","endLine":52,"endColumn":15},{"ruleId":"241","severity":1,"message":"257","line":54,"column":9,"nodeType":"243","messageId":"244","endLine":54,"endColumn":21},{"ruleId":"237","replacedBy":"258"},{"ruleId":"239","replacedBy":"259"},{"ruleId":"237","replacedBy":"260"},{"ruleId":"239","replacedBy":"261"},{"ruleId":"241","severity":1,"message":"262","line":3,"column":10,"nodeType":"243","messageId":"244","endLine":3,"endColumn":19},{"ruleId":"241","severity":1,"message":"255","line":32,"column":11,"nodeType":"243","messageId":"244","endLine":32,"endColumn":18},{"ruleId":"263","severity":1,"message":"264","line":37,"column":25,"nodeType":"265","messageId":"266","endLine":37,"endColumn":27},{"ruleId":"241","severity":1,"message":"267","line":3,"column":47,"nodeType":"243","messageId":"244","endLine":3,"endColumn":52},{"ruleId":"241","severity":1,"message":"268","line":3,"column":54,"nodeType":"243","messageId":"244","endLine":3,"endColumn":62},{"ruleId":"241","severity":1,"message":"269","line":3,"column":64,"nodeType":"243","messageId":"244","endLine":3,"endColumn":76},{"ruleId":"241","severity":1,"message":"270","line":5,"column":10,"nodeType":"243","messageId":"244","endLine":5,"endColumn":14},{"ruleId":"241","severity":1,"message":"271","line":36,"column":9,"nodeType":"243","messageId":"244","endLine":36,"endColumn":14},{"ruleId":"241","severity":1,"message":"272","line":2,"column":8,"nodeType":"243","messageId":"244","endLine":2,"endColumn":13},{"ruleId":"237","replacedBy":"273"},{"ruleId":"239","replacedBy":"274"},{"ruleId":"241","severity":1,"message":"275","line":8,"column":10,"nodeType":"243","messageId":"244","endLine":8,"endColumn":20},{"ruleId":"241","severity":1,"message":"276","line":37,"column":7,"nodeType":"243","messageId":"244","endLine":37,"endColumn":14},{"ruleId":"241","severity":1,"message":"277","line":142,"column":15,"nodeType":"243","messageId":"244","endLine":142,"endColumn":25},{"ruleId":"241","severity":1,"message":"278","line":2,"column":8,"nodeType":"243","messageId":"244","endLine":2,"endColumn":13},{"ruleId":"237","replacedBy":"279"},{"ruleId":"239","replacedBy":"280"},{"ruleId":"241","severity":1,"message":"281","line":2,"column":22,"nodeType":"243","messageId":"244","endLine":2,"endColumn":26},{"ruleId":"241","severity":1,"message":"282","line":2,"column":28,"nodeType":"243","messageId":"244","endLine":2,"endColumn":37},{"ruleId":"241","severity":1,"message":"283","line":2,"column":39,"nodeType":"243","messageId":"244","endLine":2,"endColumn":50},{"ruleId":"241","severity":1,"message":"262","line":2,"column":52,"nodeType":"243","messageId":"244","endLine":2,"endColumn":61},{"ruleId":"241","severity":1,"message":"284","line":2,"column":63,"nodeType":"243","messageId":"244","endLine":2,"endColumn":67},{"ruleId":"241","severity":1,"message":"275","line":3,"column":10,"nodeType":"243","messageId":"244","endLine":3,"endColumn":20},{"ruleId":"247","severity":1,"message":"248","line":21,"column":14,"nodeType":"249","endLine":25,"endColumn":15},{"ruleId":"241","severity":1,"message":"285","line":2,"column":8,"nodeType":"243","messageId":"244","endLine":2,"endColumn":17},{"ruleId":"241","severity":1,"message":"286","line":45,"column":23,"nodeType":"243","messageId":"244","endLine":45,"endColumn":33},{"ruleId":"241","severity":1,"message":"287","line":52,"column":21,"nodeType":"243","messageId":"244","endLine":52,"endColumn":30},{"ruleId":"241","severity":1,"message":"288","line":53,"column":21,"nodeType":"243","messageId":"244","endLine":53,"endColumn":33},{"ruleId":"241","severity":1,"message":"289","line":55,"column":21,"nodeType":"243","messageId":"244","endLine":55,"endColumn":26},{"ruleId":"241","severity":1,"message":"286","line":57,"column":21,"nodeType":"243","messageId":"244","endLine":57,"endColumn":31},"no-native-reassign",["290"],"no-negated-in-lhs",["291"],"no-unused-vars","'app' is defined but never used.","Identifier","unusedVar","'titleImage' is defined but never used.","'profileImage' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["290"],["291"],"'Typography' is defined but never used.","'StyledTabs' is assigned a value but never used.","'StyledTab' is assigned a value but never used.","'classes' is assigned a value but never used.","'value' is assigned a value but never used.","'handleChange' is assigned a value but never used.",["290"],["291"],["290"],["291"],"'Container' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Paper' is defined but never used.","'GridList' is defined but never used.","'GridListTile' is defined but never used.","'blue' is defined but never used.","'title' is assigned a value but never used.","'Modal' is defined but never used.",["290"],["291"],"'makeStyles' is defined but never used.","'storage' is assigned a value but never used.","'inputValue' is assigned a value but never used.","'axios' is defined but never used.",["290"],["291"],"'Card' is defined but never used.","'CardMedia' is defined but never used.","'CardContent' is defined but never used.","'Grid' is defined but never used.","'PropTypes' is defined but never used.","'credential' is assigned a value but never used.","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'email' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]